program = 2,4,1,3,7,5,1,5,0,3,4,3,5,5,3,0
 0: (2, 4) -> bst A %   8      to B
 2: (1, 3) -> bxl B XOR 3      to B
 4: (7, 5) -> cdv A //  (2**B) to C
 6: (1, 5) -> bxl B XOR 5      to B
 8: (0, 3) -> adv A //  (2**3) to A
10: (4, 3) -> bxc B XOR C      to B
12: (5, 5) -> out print(B % 8)
14: (3, 0) -> jnz if A != 0 : jump to 0

From start to end: [A, B, C]
 0: B = A % 8 [A, A % 8, C]
 2: B = B XOR 3 [A, (A % 8) XOR 3, 0]
 4: C = A // (2**B) [A, (A % 8) XOR 3, A // 2**((A % 8) XOR 3)]
 6: B = B XOR 5 [A, (A % 8) XOR 3 XOR 5, A // 2**((A % 8) XOR 3)]
 However, 3 XOR 5 = 0b011 XOR 0b101 = 0b110 = 6
 6: B = B XOR 5 [A, (A % 8) XOR 6, A // 2**((A % 8) XOR 3)]
 8: A = A // 8 [A // 8, (A % 8) XOR 6, A // 2**((A % 8) XOR 3)]
10: B = B XOR C [A // 8, (A % 8) XOR 6 XOR (A // ((A % 8) XOR 3)), A // 2**((A % 8) XOR 3)]
12: OUT B % 8 == out
--> ((A % 8) XOR 6 XOR (A // 2**((A % 8) XOR 3))) % 8 = out
--> ((A % 8) % 8) XOR (6 % 8) XOR ((A // 2**((A % 8) XOR 3)) % 8) = out
--> (A % 8) XOR 6 XOR ((A // 2**((A % 8) XOR 3)) % 8) = out
--> (A % 8) XOR ((A // 2**((A % 8) XOR 3)) % 8) = out XOR 6
Test for all 8 possibilities A in [0, 1, 2, 3, 4, 5, 6, 7]
